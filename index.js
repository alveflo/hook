#!/usr/bin/env node
var program = require('commander');
var scaffolder = require('./hook/scaffold.js');
var server = require('./hook/server.js');
var jsonfile = require('jsonfile');

program
  .option('init',                  'Initialize configuration')
  .option('serve',                 'Starts server')
  .option('-p, --port <port>',     'Port on which to run server. Defaults to 7000')
  .option('-c, --config <file>',   'Location of configuration json file. (Generated by "hook init"). Defaults to ./.cpthook.config')
  .option('-d, --dir <dir>',       'Directory of which to serve static files from. Defaults to ./')
  .parse(process.argv);

if (program.init) {
  scaffolder();
  console.log("Yarr! Captain Hook is now initialized and ready to run (hook serve)");
  return;
}
else if (program.serve) {
  var port = program.port || 3000;
  var directory = program.dir || "./";
  var configfile = program.config || "./.cpthook.config";

  try {
    var config = jsonfile.readFileSync(configfile);
  } catch(ex) {
    console.log("Unable to load config file: " + configfile);
    console.log("Run 'hook init' to generate.");
    return;
  }
  console.log("\nAhoy! Captain Hook is up n' running:\n\n\tURL: \thttp://localhost:" + port + "\n\tDir: \t" + directory + "\n");
  server.serve(config, port, directory);
}
